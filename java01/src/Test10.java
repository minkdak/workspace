/* 자바 프로그래밍 - 소스 파일과 바이트코드 파일(클래스 파일)의 분리/ */

public class Test10{
  public static void main(String[] args) {
    // bin/Test09.class 파일에 들어 있는 m1() 메서드 호출!
    Test09.m1();

    // bin/other/Test09.class 파일에 들어 있는 m1() 메서드 호출!
    //other/test.09.m1() 자바에서 이런문법은없다.
    Test09.m1(); // 어 ? 그럼 bin 폴더에 있는 Test09와 어떻게 구분하는가?
                // 답: 구분 못한다. 방법이 없다!
  }
}
/*
다른 클래스의 메서드 호출하기
- 방법
클래스명.메서드명()

컴파일 할 때 이 클래스가 사용하는 다른 클래스의 위치를 알려줘야 컴파일이 된다.
- 방법
   javac -d 컴파일이_된_클래스_파일이_놓일_폴더
        -cp or -classpath 사용할_클래스_파일이_있는_폴더_위치
        컴파일_할_자바_소스_파일명
  java01> javac -d bin -cp bin src/Test10.java

결론!
- 소스 파일을 어찌어찌 폴더로 분리하여 관리할 수는 있다.
- 그러나 실행 모드에서 다른 클래스를 사용할 때 문제가 발생한다.
 폴더는 다르지만 같은 이름을 가진 클래스를 사용할 때가 문제이다.
- 해결 방법은 없는가?
  그래서 자바는 패키지라는 문법을 제공한다.
  개발자들이 클래스 이름이 같아서 발생할 수 있는 문제를 걱정하지 않고
  마음껏 클래스를 여러 폴더에 분산 배치할 수 있는 기술을 제공하고 있다.

*/
