<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd">

  <!-- Spring IoC 컨테이너를 위한 객체 등록 
       => 페이지 컨트롤러, Service, DAO 등의 객체를 준비한다.
  -->
  <context:component-scan base-package="control"/>
  
  <!-- Spring WebMVC 관련 기능을 처리할 객체 등록 
       => 프론트 컨트롤러가 작업하는 데 필요한 객체를 준비한다.
       => @RequestMapping 애노테이션을 처리하는 등.
  -->
  <mvc:annotation-driven/>

  <!-- 페이지 컨트롤러가 JSP URL을 리턴할 때, 해당 JSP를 찾아 실행하는 객체  
       => 이렇게 JSP를 실행할 객체를 명시적으로 등록하게 되면,
          페이지 컨트롤러에서 JSP URL을 리턴할 때 
          이 설정을 고려해야 한다.
  -->
  <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <!-- <property name="prefix" value="/"/> -->
    <property name="prefix" value="/WEB-INF/view/"/>
    <property name="suffix" value=".jsp"/>
  </bean>

  <!-- 멀티파트 요청 데이터를 처리해주는 객체 등록
       => 이 객체를 등록하지 않으면, multipart/form-data 로 인코딩되어 넘어온 
          요청 데이터를 처리하지 못한다!  -->
  <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- 각 파일의 최대 크기(byte)를 지정할 수 있다. -->
    <property name="maxUploadSize" value="100000000"/>
  </bean>

  <mvc:interceptors>
<!--  
    <bean class="control.MyInterceptor"/>
-->
<!--  
    <mvc:interceptor>
        <mvc:mapping path="/control/controller22/list.do"/>
        <mvc:mapping path="/control/controller22/insert.do"/>
        <bean class="control.MyInterceptor"/>
    </mvc:interceptor>
-->
    <mvc:interceptor>
        <mvc:mapping path="/control/controller22/**"/>
        <mvc:exclude-mapping path="/control/controller22/delete.do"/>
        <mvc:exclude-mapping path="/control/controller22/detail.do"/>
        <bean class="control.MyInterceptor"/>
    </mvc:interceptor>
  </mvc:interceptors>
  
  <!-- AOP를 처리할 객체 등록 -->
  <aop:aspectj-autoproxy/>
  
  
  <!-- 커스텀 프로퍼티 에디터를 등록하는 두 번째 방법 -->
  <!--  
  <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="cacheSeconds" value="0"/>
    <property name="webBindingInitializer">
        <bean class="control.MyWebBindingInitializer"/>
    </property>
  </bean>
  -->
</beans>






