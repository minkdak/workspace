<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="travelstudio.dao.DetailDao">
  
  <resultMap type="detail" id="detailMap">
    <id column="picno" property="picno"/>
    <result column="postno" property="postno"/>
    <result column="cont" property="cont"/>
    <result column="date" property="date"/>
    <result column="lati" property="lati"/>
    <result column="longit" property="longit"/>
    <result column="writer" property="writer"/>
    <result column="address" property="address"/>
  </resultMap> 

   <insert id="insert" parameterType="detail"> 
    insert into detail(picno, writer)
    values(#{picno},#{writer})
  </insert>
  
  <insert id="insert_map" parameterType="detail"> 
    insert into detail(lati, longit, address)
    values(#{lati},#{longit}, #{address})
  </insert>
  
   <select id="selectList" resultMap="detailMap" parameterType="map">
    select lati, longit, postno from detail where postno = 1;
    
  </select> 
  
    <update id="insertDetailByEmail" parameterType="detail" >
  update detail set postno= #{postno} where writer=#{writer}
  </update>
  
  <update id="deleteEmail" parameterType="String" >
  update detail set writer="" where writer=#{writer}
  </update>
  
   <insert id="insertDetailContent" parameterType="detail"> 
    insert into detail(cont, postno, srtno)
    values(#{cont},#{postno}, #{srtno})
  </insert>
  
  <select id="selectedOneDetail" resultMap="detailMap" parameterType="String">
  select * from detail where postno=#{postno} order by srtno asc
  </select>
  
 <select id="selectAddress" resultMap="detailMap" parameterType="Integer">
    select d.address
    from post p inner join detail d on p.postno=d.postno
    where mno=#{mno}
  </select> 
  
   <insert id="addAllphoto" parameterType="detail"> 
    insert into detail(picno, writer, srtno)
    values(#{picno},#{writer},#{srtno})
  </insert>
  
  <!-- 
  <select id="selectListByNames" resultMap="memberMap" parameterType="map">
    <include refid="select1"/>
    <if test="names != null">
      <where>
        name in 
        <foreach collection="names" item="name" open="(" close=")" separator=",">
          #{name}
        </foreach>
      </where> 
    </if>    
    order by name asc 
    limit #{startIndex}, #{pageSize}
  </select>
  
  <select id="selectOne" resultMap="memberMap" parameterType="int">
    <include refid="select1"/> 
    where mno = #{memberNo}
  </select>
  
  <select id="selectOneByEmailPassword" resultMap="memberMap" parameterType="map">
    <include refid="select1"/> 
    where email=#{email} and pwd=password(#{password})
  </select>
  
  <insert id="insert" parameterType="member" 
          useGeneratedKeys="true" keyColumn="mno" keyProperty="no">
    insert into memb(name,tel,email,pwd) 
    values(#{name},#{tel},#{email},password(#{password}))
  </insert>
  
  <update id="update" parameterType="member">
    update memb set 
      name=#{name}, 
      tel=#{tel}, 
      email=#{email}, 
      pwd=password(#{password}) 
    where mno=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from memb 
    where mno=#{memberNo}
  </delete> -->

</mapper>




