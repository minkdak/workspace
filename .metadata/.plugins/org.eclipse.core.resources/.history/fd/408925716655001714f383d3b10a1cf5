package bitcamp.java93.servlet;
/* 회원 관리 만들기: 회원 목록 출력
 * => 포워드 적용: 오류 처리 부분
 * => 인클루딩 적용: 웹페이지의 꼬리말 출력 부분 
 */

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.context.ApplicationContext;

import bitcamp.java93.control.Controller;


@WebServlet(urlPatterns="*.do")
public class DispatcherServlet extends HttpServlet {
  private static final long serialVersionUID = 1L; //
  
  @Override
  public void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {    
    try {
      String controllerPath = req.getServletPath().replace(".do", "");
      
      res.setContentType("text/html;charset=UTF-8");
      
      ApplicationContext appCtx = (ApplicationContext)this.getServletContext().getAttribute("beanContainer");
      Controller pageController = (Controller)appCtx.getBean(controllerPath);
      
      if (pageController == null) {
        throw new ServletException("해당 URL을 처리할 수 없습니다.");
      }
      
      // 요청한 URL을 처리할 페이지 컨트롤러가 있다면, 호출
      
      String viewPath = pageController.service(req, res);
      
      
      if (viewPath.startsWith("redirect:")) {
        res.sendRedirect(viewPath.replaceAll("redirect:", ""));
        return;
      } 
      
      RequestDispatcher rd = req.getRequestDispatcher(viewPath);
      rd.include(req, res);
      
    } catch (Exception e) {
      req.setAttribute("error", e);
      RequestDispatcher rd = req.getRequestDispatcher("/error.jsp");
      rd.forward(req, res);
      return;
    }
  }
}
