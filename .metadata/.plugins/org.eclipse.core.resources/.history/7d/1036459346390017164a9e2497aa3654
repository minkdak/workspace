/* 캡슐화(encapsulation): modifier 종류 I
 * => 캡슐화란?
 *    - 인스턴스 변수에 무효한 값이 들어가지 않도록 접근을 제한하는 문법이다.
 *    - 무효한 값이 들어가면 클래스의 찾아서 정의(추상화)한 보람이 없어진다.
 * => private
 *    - 클래스 멤버만이 접근 가능
 * => (default) : 아무것도 붙이지 않는 것.
 *    - 클래스 멤버 + 같은 패키지의 클래스
 * => protected
 *    - 클래스 멤버 + 같은 패키지의 클래스 + 자식 클래스
 * => public
 *    - 모든 접근 허용.
 */
package step11;

import step11.ex1.A;

public class Test03 {
  
  public static void main(String[] args){
    A obj = new A();
    // obj.v1 = 1; // private
    // obj.v2 = 2; // (default)
    // obj.v3 = 3; // protected
    obj.v4 = 4; // public
  }
  
}
