/* 추상 클래스
 * 1) 추상 클래스
 *    => 서브 클래스에게 공통 필드와 메서드를 상속해주는 용도로 사용한다.
 *    => 그 자체로 인스턴스를 만들어 사용하지 않는 경우에 
 *       "추상 클래스"로 선언한다.
 *    => 예) Car 클래스는 Sedan, Truck, Bulldozer의 공통 기능을 모아둔 클래스이다.
 *           이 클래스를 직접사용하려고 만든게 아니다
 *           이와 같이 generalization과정에 생성된 수퍼 클래스인 경우
 *           주로 추상클래스로 선언한다.
 *    => 왜? 
 *      - 직접 사용하지 말라는 의미다! 
 *      - 상속 받아 쓰라는 의미다.
 *      - 단지 상속 해주는 역할을 한다는 의미다!
 *    => 실습
 *      - Car 클래스와 Loader 클래스는 직접 사용하기 위해 만든 클래스가 아니다.
 *        서브 클래스의 공통 필드나 메서드를 관리하기 쉽도록 하기 위해
 *        수퍼 클래스로 정의한 것이다.
 *        그래서 이 클래스들은 abstract로 선언하는 것이 마땅하다!
 *     
 *    
 */
package step21.ex3;

public class Test01 {
  
  public static void main(String[] args) {
    Truck car1 = new Truck("타이탄", "비트자동차", 10000);
    car1.load("자갈");
    car1.run();
    car1.dump();
    
    // 추상 클래스는 인스턴스를 못 만든다.
    // 왜? 추상 클래스는 서브 클래스를 만들 때 사용하라고 공통 필드나 메서드를 정의한 클래스다.
    //     직접 쓰려고 만든 클래스가 아니다.
    // Car car2 = new Car(); // 컴파일 오류! // 인스턴스 생성 불가
    // Loader car3 = new Loader(); // 컴파일 오류!
  }
} 
  